NOTE - Exclude from the study, because of contiguity issues?
--------
baseline:

(1) Create output directories
(2) scripts/extract_water_only.py -s UT > data/UT/UT_2020_vtd_water_only.csv

		There is one water-only precinct
	
(3) scripts/extract_data.py -s UT
(4) scripts/extract_graph.py -s UT

	NOTE - I *didn't* use these adds/mods -or bridge over unpopulated precincts:
	
	+, 490450WENDI, 49045IBA000
	+, 490450WENDI, 49003GC0000

	I probably explored using both strategies at one point in time.

(5) scripts/baseline_state.py -s UT -i 100 -c -v > intermediate/UT/UT20C_log_100.txt

	* Review "WARNING" messages in the log.

(6) scripts/compare_maps.py -s UT -i 100 -v

	* Copy any missing maps output to maps/UT/UT20C_missing.txt.
	* Import UT20C_candidates.csv into a spreadheet, and verify that the results are OK.
	
(7) Copy the lowest energy contiguous candidate with population deviation <= 2% to the maps/UT directory as UT20C_baseline_100.csv.

	UT20C_I010K01N04

--------



--------

Traceback (most recent call last):
  File "/Users/alecramsay/iCloud/dev/dccvt/examples/redistricting/redistricting.py", line 315, in <module>
    main()
  File "/Users/alecramsay/iCloud/dev/dccvt/examples/redistricting/redistricting.py", line 40, in main
    mk_contiguous(args.assignment, args.adjacent, args.output)
  File "/Users/alecramsay/Documents/dev/dccvt/examples/redistricting/make_contiguous.py", line 86, in mk_contiguous
    contig: list[Assignment] = get_contiguous(assignments, adjacents)
  File "/Users/alecramsay/Documents/dev/dccvt/examples/redistricting/make_contiguous.py", line 66, in get_contiguous
    assert len(counter) > 0, f"no neighboring blocks for {smallest}"
AssertionError: no neighboring blocks for {316}

--------

The map is not contiguous!?!

Wendover I

490450WENDI,Wendover I
49045WENDUN,Wendover U N <= This is the problematic unpopulated precinct. DON'T bridge over it!
49045WENDUS,Wendover U S

Bridging over Wendover U N creates all these unexpected adjacencies:
49011DC0010,490450WENDI
490450WENDI,49045IBA000
49035SLC002,490450WENDI
490450WENDI,49057WCW01W
490450WENDI,49045WENDUS <= Expected
490450WENDI,49057HPR01E
49003BC0001,490450WENDI
490450WENDI,49057WCW02C
490450WENDI,49057HPR01W
49035NRV001,490450WENDI
490450WENDI,49045LP0001
490450WENDI,49057WCW01C
49003PER04I,490450WENDI
49003WLRD0I,490450WENDI
490450WENDI,49057WCW02W
490450WENDI,49045WENDUN <= Expected
49035GSL001,490450WENDI
49003PARK00,490450WENDI
49003LAKE00,490450WENDI
49003COR1US,490450WENDI
49011SY002U,490450WENDI
49003WLRD0U,490450WENDI
49011FA012U,490450WENDI
49003PROM00,490450WENDI
49035MANRV1,490450WENDI
49003SWIL00,490450WENDI
49003SNOWUS,490450WENDI
49011DC0020,490450WENDI
490450WENDI,49045TERRA0
49003GC0000,490450WENDI

--------

pg:

(5) scripts/import_base_map.sh UT

	Verify the map in DRA.

(6) Open the map in DRA:
	* Set the Colors and Overlays -- 'Change Palette' to Plasma
	* Copy the Share link guid to constants.py in both the 'baseline' and 'pg' repos
	* Export the block-assignment file
	* Rename it to UT_2020_Congress_Baseline.csv <<< NOTE - 2020 not 2022, and 'Baseline' not 'baseline'
	* Move it to the data/UT/ folder
(7) scripts/pull_map_ratings.sh UT Congress Baseline xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
(8) Tweak each duplicated Official and Notable map in DRA
	* UT_2022_Congress_Compact_map.png
	* UT_2022_Congress_Competitive_map.png
	* UT_2022_Congress_Minority_map.png
	* UT_2022_Congress_Official_map.png
	* UT_2022_Congress_Proportional_map.png
	* UT_2022_Congress_Splitting_map.png
	* Move them to the docs/assets/images/ folder
	* Add the maps to the Group
(9) scripts/analyze_state.py UT


(10) Add population deviation & runtime to the abstract spreadsheet

	cat intermediate/UT/UT20C_log_100.txt | awk 'END{print}'
	
(11) Turn the state on in the website

	* Add the Share link guid to states.yml and flip the 'ready' property for the state to 'true'
	* On the state's page in docs/_pages/pages/UT.markdown, change the layout to 'state' and remove the NYI one-liner
	
--------